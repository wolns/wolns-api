"""tracks added

Revision ID: 7dc96a77bc66
Revises: f40239876af7
Create Date: 2025-08-16 17:42:34.638484

"""

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC, StoredObject, PasswordHash
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText
sa.StoredObject = StoredObject

# revision identifiers, used by Alembic.
revision = '7dc96a77bc66'
down_revision = 'f40239876af7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tracks',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('spotify_url', sa.String(), nullable=True),
    sa.Column('yandex_url', sa.String(), nullable=True),
    sa.Column('spotify_image_url', sa.String(), nullable=True),
    sa.Column('yandex_image_url', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tracks'))
    )
    op.create_table('track_singers',
    sa.Column('track_id', sa.GUID(length=16), nullable=False),
    sa.Column('singer_id', sa.GUID(length=16), nullable=False),
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['singer_id'], ['singers.id'], name=op.f('fk_track_singers_singer_id_singers'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], name=op.f('fk_track_singers_track_id_tracks'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_track_singers')),
    sa.UniqueConstraint('track_id', 'singer_id', name='uq_track_singer')
    )
    with op.batch_alter_table('track_singers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_track_singers_singer_id'), ['singer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_track_singers_track_id'), ['track_id'], unique=False)

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('track_singers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_track_singers_track_id'))
        batch_op.drop_index(batch_op.f('ix_track_singers_singer_id'))

    op.drop_table('track_singers')
    op.drop_table('tracks')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""